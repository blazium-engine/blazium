<?xml version="1.0" encoding="UTF-8" ?>
<class name="TwitchClipsRequests" inherits="TwitchRequestBase" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../doc/class.xsd">
	<brief_description>
		Twitch Clips API for creating and retrieving video clips.
	</brief_description>
	<description>
		TwitchClipsRequests provides methods for creating clips from live streams and retrieving existing clips. Creating clips requires clips:edit OAuth scope. Access through [method TwitchAPI.get_clips].
	</description>
	<tutorials>
		<link title="Twitch API documentation">https://dev.twitch.tv/docs/api/reference</link>
	</tutorials>
	<methods>
		<method name="create_clip">
			<return type="void" />
			<param index="0" name="broadcaster_id" type="String" />
			<param index="1" name="has_delay" type="bool" default="false" />
			<description>
				Creates a clip from the broadcaster's live stream. Set [param has_delay] to true to add a delay before capturing. Requires clips:edit scope. Results are returned via the [signal TwitchAPI.request_completed] signal with signal_name "clip_created".
				[b]Response includes:[/b] id (clip ID), edit_url (URL to edit the clip).
				[codeblock]
				TwitchAPI.get_clips().create_clip("broadcaster_id", false)
				# Response: {"data": [{"id": "AwkwardHelplessSalamanderSwiftRage", "edit_url": "https://clips.twitch.tv/AwkwardHelplessSalamanderSwiftRage/edit"}]}
				[/codeblock]
			</description>
		</method>
		<method name="get_clips">
			<return type="void" />
			<param index="0" name="params" type="Dictionary" />
			<description>
				Gets clips filtered by various parameters. [param params] can include broadcaster_id, game_id, id, started_at, ended_at, and first. Results are returned via the [signal TwitchAPI.request_completed] signal with signal_name "clips_received".
				[b]Response includes:[/b] Array of clips with id, url, embed_url, broadcaster_id/name, creator_id/name, video_id, game_id, language, title, view_count, created_at, thumbnail_url, duration, vod_offset.
				[codeblock]
				var params = {"broadcaster_id": "123", "first": 10}
				TwitchAPI.get_clips().get_clips(params)
				# Response: {"data": [{"id": "AwkwardClip", "url": "https://clips.twitch.tv/...", "broadcaster_name": "MyChannel", "title": "Epic Moment", "view_count": 1500, "created_at": "2025-10-16T12:00:00Z", "duration": 30.5}]}
				[/codeblock]
			</description>
		</method>
	</methods>
</class>
