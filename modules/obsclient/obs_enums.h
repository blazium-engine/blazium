/**************************************************************************/
/*  obs_enums.h                                                           */
/**************************************************************************/
/*                         This file is part of:                          */
/*                             BLAZIUM ENGINE                             */
/*                          https://blazium.app                           */
/**************************************************************************/
/* Copyright (c) 2024-present Blazium Engine contributors.                */
/*                                                                        */
/* Permission is hereby granted, free of charge, to any person obtaining  */
/* a copy of this software and associated documentation files (the        */
/* "Software"), to deal in the Software without restriction, including    */
/* without limitation the rights to use, copy, modify, merge, publish,    */
/* distribute, sublicense, and/or sell copies of the Software, and to     */
/* permit persons to whom the Software is furnished to do so, subject to  */
/* the following conditions:                                              */
/*                                                                        */
/* The above copyright notice and this permission notice shall be         */
/* included in all copies or substantial portions of the Software.        */
/*                                                                        */
/* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,        */
/* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF     */
/* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. */
/* IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY   */
/* CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,   */
/* TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE      */
/* SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.                 */
/**************************************************************************/

#pragma once

// WebSocket OpCodes for obs-websocket protocol
enum OBSWebSocketOpCode {
	OBS_WEBSOCKET_OPCODE_HELLO = 0, // Server -> Client: Initial message
	OBS_WEBSOCKET_OPCODE_IDENTIFY = 1, // Client -> Server: Identify request
	OBS_WEBSOCKET_OPCODE_IDENTIFIED = 2, // Server -> Client: Identify response
	OBS_WEBSOCKET_OPCODE_REIDENTIFY = 3, // Client -> Server: Update session parameters
	OBS_WEBSOCKET_OPCODE_EVENT = 5, // Server -> Client: Event notification
	OBS_WEBSOCKET_OPCODE_REQUEST = 6, // Client -> Server: Request
	OBS_WEBSOCKET_OPCODE_REQUEST_RESPONSE = 7, // Server -> Client: Request response
	OBS_WEBSOCKET_OPCODE_REQUEST_BATCH = 8, // Client -> Server: Batch request
	OBS_WEBSOCKET_OPCODE_REQUEST_BATCH_RESPONSE = 9, // Server -> Client: Batch response
};

// WebSocket close codes
enum OBSWebSocketCloseCode {
	OBS_WEBSOCKET_CLOSE_DONT_CLOSE = 0,
	OBS_WEBSOCKET_CLOSE_UNKNOWN_REASON = 4000,
	OBS_WEBSOCKET_CLOSE_MESSAGE_DECODE_ERROR = 4002,
	OBS_WEBSOCKET_CLOSE_MISSING_DATA_FIELD = 4003,
	OBS_WEBSOCKET_CLOSE_INVALID_DATA_FIELD_TYPE = 4004,
	OBS_WEBSOCKET_CLOSE_INVALID_DATA_FIELD_VALUE = 4005,
	OBS_WEBSOCKET_CLOSE_UNKNOWN_OPCODE = 4006,
	OBS_WEBSOCKET_CLOSE_NOT_IDENTIFIED = 4007,
	OBS_WEBSOCKET_CLOSE_ALREADY_IDENTIFIED = 4008,
	OBS_WEBSOCKET_CLOSE_AUTHENTICATION_FAILED = 4009,
	OBS_WEBSOCKET_CLOSE_UNSUPPORTED_RPC_VERSION = 4010,
	OBS_WEBSOCKET_CLOSE_SESSION_INVALIDATED = 4011,
	OBS_WEBSOCKET_CLOSE_UNSUPPORTED_FEATURE = 4012,
};

// Request batch execution types
enum OBSRequestBatchExecutionType {
	OBS_REQUEST_BATCH_EXECUTION_TYPE_NONE = -1,
	OBS_REQUEST_BATCH_EXECUTION_TYPE_SERIAL_REALTIME = 0,
	OBS_REQUEST_BATCH_EXECUTION_TYPE_SERIAL_FRAME = 1,
	OBS_REQUEST_BATCH_EXECUTION_TYPE_PARALLEL = 2,
};

// Request status codes
enum OBSRequestStatus {
	OBS_REQUEST_STATUS_UNKNOWN = 0,
	OBS_REQUEST_STATUS_NO_ERROR = 10,
	OBS_REQUEST_STATUS_SUCCESS = 100,
	OBS_REQUEST_STATUS_MISSING_REQUEST_TYPE = 203,
	OBS_REQUEST_STATUS_UNKNOWN_REQUEST_TYPE = 204,
	OBS_REQUEST_STATUS_GENERIC_ERROR = 205,
	OBS_REQUEST_STATUS_UNSUPPORTED_REQUEST_BATCH_EXECUTION_TYPE = 206,
	OBS_REQUEST_STATUS_NOT_READY = 207,
	OBS_REQUEST_STATUS_MISSING_REQUEST_FIELD = 300,
	OBS_REQUEST_STATUS_MISSING_REQUEST_DATA = 301,
	OBS_REQUEST_STATUS_INVALID_REQUEST_FIELD = 400,
	OBS_REQUEST_STATUS_INVALID_REQUEST_FIELD_TYPE = 401,
	OBS_REQUEST_STATUS_REQUEST_FIELD_OUT_OF_RANGE = 402,
	OBS_REQUEST_STATUS_REQUEST_FIELD_EMPTY = 403,
	OBS_REQUEST_STATUS_TOO_MANY_REQUEST_FIELDS = 404,
	OBS_REQUEST_STATUS_OUTPUT_RUNNING = 500,
	OBS_REQUEST_STATUS_OUTPUT_NOT_RUNNING = 501,
	OBS_REQUEST_STATUS_OUTPUT_PAUSED = 502,
	OBS_REQUEST_STATUS_OUTPUT_NOT_PAUSED = 503,
	OBS_REQUEST_STATUS_OUTPUT_DISABLED = 504,
	OBS_REQUEST_STATUS_STUDIO_MODE_ACTIVE = 505,
	OBS_REQUEST_STATUS_STUDIO_MODE_NOT_ACTIVE = 506,
	OBS_REQUEST_STATUS_RESOURCE_NOT_FOUND = 600,
	OBS_REQUEST_STATUS_RESOURCE_ALREADY_EXISTS = 601,
	OBS_REQUEST_STATUS_INVALID_RESOURCE_TYPE = 602,
	OBS_REQUEST_STATUS_NOT_ENOUGH_RESOURCES = 603,
	OBS_REQUEST_STATUS_INVALID_RESOURCE_STATE = 604,
	OBS_REQUEST_STATUS_INVALID_INPUT_KIND = 605,
	OBS_REQUEST_STATUS_RESOURCE_NOT_CONFIGURABLE = 606,
	OBS_REQUEST_STATUS_INVALID_FILTER_KIND = 607,
	OBS_REQUEST_STATUS_RESOURCE_CREATION_FAILED = 700,
	OBS_REQUEST_STATUS_RESOURCE_ACTION_FAILED = 701,
	OBS_REQUEST_STATUS_REQUEST_PROCESSING_FAILED = 702,
	OBS_REQUEST_STATUS_CANNOT_ACT = 703,
};

// Event subscription flags (bitmask)
enum OBSEventSubscription {
	OBS_EVENT_SUBSCRIPTION_NONE = 0,
	OBS_EVENT_SUBSCRIPTION_GENERAL = (1 << 0),
	OBS_EVENT_SUBSCRIPTION_CONFIG = (1 << 1),
	OBS_EVENT_SUBSCRIPTION_SCENES = (1 << 2),
	OBS_EVENT_SUBSCRIPTION_INPUTS = (1 << 3),
	OBS_EVENT_SUBSCRIPTION_TRANSITIONS = (1 << 4),
	OBS_EVENT_SUBSCRIPTION_FILTERS = (1 << 5),
	OBS_EVENT_SUBSCRIPTION_OUTPUTS = (1 << 6),
	OBS_EVENT_SUBSCRIPTION_SCENE_ITEMS = (1 << 7),
	OBS_EVENT_SUBSCRIPTION_MEDIA_INPUTS = (1 << 8),
	OBS_EVENT_SUBSCRIPTION_VENDORS = (1 << 9),
	OBS_EVENT_SUBSCRIPTION_UI = (1 << 10),
	OBS_EVENT_SUBSCRIPTION_INPUT_VOLUME_METERS = (1 << 16),
	OBS_EVENT_SUBSCRIPTION_INPUT_ACTIVE_STATE_CHANGED = (1 << 17),
	OBS_EVENT_SUBSCRIPTION_INPUT_SHOW_STATE_CHANGED = (1 << 18),
	OBS_EVENT_SUBSCRIPTION_SCENE_ITEM_TRANSFORM_CHANGED = (1 << 19),
	OBS_EVENT_SUBSCRIPTION_ALL = (OBS_EVENT_SUBSCRIPTION_GENERAL |
			OBS_EVENT_SUBSCRIPTION_CONFIG |
			OBS_EVENT_SUBSCRIPTION_SCENES |
			OBS_EVENT_SUBSCRIPTION_INPUTS |
			OBS_EVENT_SUBSCRIPTION_TRANSITIONS |
			OBS_EVENT_SUBSCRIPTION_FILTERS |
			OBS_EVENT_SUBSCRIPTION_OUTPUTS |
			OBS_EVENT_SUBSCRIPTION_SCENE_ITEMS |
			OBS_EVENT_SUBSCRIPTION_MEDIA_INPUTS |
			OBS_EVENT_SUBSCRIPTION_VENDORS |
			OBS_EVENT_SUBSCRIPTION_UI),
};

// Media input actions
enum OBSMediaInputAction {
	OBS_MEDIA_INPUT_ACTION_NONE,
	OBS_MEDIA_INPUT_ACTION_PLAY,
	OBS_MEDIA_INPUT_ACTION_PAUSE,
	OBS_MEDIA_INPUT_ACTION_STOP,
	OBS_MEDIA_INPUT_ACTION_RESTART,
	OBS_MEDIA_INPUT_ACTION_NEXT,
	OBS_MEDIA_INPUT_ACTION_PREVIOUS,
};

// Output states
enum OBSOutputState {
	OBS_OUTPUT_STATE_UNKNOWN,
	OBS_OUTPUT_STATE_STARTING,
	OBS_OUTPUT_STATE_STARTED,
	OBS_OUTPUT_STATE_STOPPING,
	OBS_OUTPUT_STATE_STOPPED,
	OBS_OUTPUT_STATE_RECONNECTING,
	OBS_OUTPUT_STATE_RECONNECTED,
	OBS_OUTPUT_STATE_PAUSED,
	OBS_OUTPUT_STATE_RESUMED,
};
